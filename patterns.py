import numpy as np

# Define patterns as NumPy arrays (1 = alive, 0 = dead)
patterns = {
    "Block": np.array([
        [1, 1],
        [1, 1]
    ]),
    "Beehive": np.array([
        [0, 1, 1, 0],
        [1, 0, 0, 1],
        [0, 1, 1, 0]
    ]),
    "Loaf": np.array([
        [0, 1, 1, 0],
        [1, 0, 0, 1],
        [0, 1, 0, 1],
        [0, 0, 1, 0]
    ]),
    "Boat": np.array([
        [1, 1, 0],
        [1, 0, 1],
        [0, 1, 0]
    ]),
    "Tub": np.array([
        [0, 1, 0],
        [1, 0, 1],
        [0, 1, 0]
    ]),
    "Blinker": np.array([
        [1, 1, 1]
    ]), # Or np.array([[1],[1],[1]]) depending on orientation
    "Toad": np.array([
        [0, 1, 1, 1],
        [1, 1, 1, 0]
    ]),
    "Beacon": np.array([
        [1, 1, 0, 0],
        [1, 1, 0, 0],
        [0, 0, 1, 1],
        [0, 0, 1, 1]
    ]),
    "Glider": np.array([
        [0, 1, 0],
        [0, 0, 1],
        [1, 1, 1]
    ]),
    "Lightweight Spaceship (LWSS)": np.array([
        [1, 0, 0, 1, 0],
        [0, 0, 0, 0, 1],
        [1, 0, 0, 0, 1],
        [0, 1, 1, 1, 1]
    ]),
    "Pulsar": np.array([
        [0,0,1,1,1,0,0,0,1,1,1,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0],
        [1,0,0,0,0,1,0,1,0,0,0,0,1],
        [1,0,0,0,0,1,0,1,0,0,0,0,1],
        [1,0,0,0,0,1,0,1,0,0,0,0,1],
        [0,0,1,1,1,0,0,0,1,1,1,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,1,1,1,0,0,0,1,1,1,0,0],
        [1,0,0,0,0,1,0,1,0,0,0,0,1],
        [1,0,0,0,0,1,0,1,0,0,0,0,1],
        [1,0,0,0,0,1,0,1,0,0,0,0,1],
        [0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,1,1,1,0,0,0,1,1,1,0,0]
    ]),
    "Pentadecathlon": np.array([
        [0,0,1,0,0,0,0,1,0,0],
        [1,1,0,1,1,1,1,0,1,1],
        [0,0,1,0,0,0,0,1,0,0]
    ]).T, # Transposed for common vertical orientation
    "Middleweight Spaceship (MWSS)": np.array([
        [0,1,1,1,1,1],
        [1,0,0,0,0,1],
        [0,0,0,0,0,1],
        [1,0,0,0,1,0],
        [0,0,1,0,0,0]
    ]),
    "Heavyweight Spaceship (HWSS)": np.array([
        [0,1,1,1,1,1,1],
        [1,0,0,0,0,0,1],
        [0,0,0,0,0,0,1],
        [1,0,0,0,0,1,0],
        [0,0,1,1,0,0,0]
    ]),
    "Gosper Glider Gun": np.array([
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1],
        [0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1],
        [1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [1,1,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,1,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
    ]),
    "R-pentomino": np.array([
        [0, 1, 1],
        [1, 1, 0],
        [0, 1, 0]
    ]),
    "Diehard": np.array([
        [0,0,0,0,0,0,1,0],
        [1,1,0,0,0,0,0,0],
        [0,1,0,0,0,1,1,1]
    ]),
    "Acorn": np.array([
        [0,1,0,0,0,0,0],
        [0,0,0,1,0,0,0],
        [1,1,0,0,1,1,1]
    ]),
    "B-heptomino": np.array([
        [1,1,0,0],
        [1,0,1,0],
        [0,1,1,1]
    ]),
    "Herschel": np.array([
        [1,1,1],
        [1,0,1],
        [0,0,1]
    ]), # Common conduit form, can be complex
    "Queen Bee Shuttle": np.array([
        [0,0,0,0,1,0],
        [0,0,0,1,0,1],
        [1,1,0,1,0,1],
        [0,1,1,1,0,0]
    ]),

    # --- Added Patterns ---
    # REMOVED Copperhead
    # "Copperhead": np.array([
    #     [0,1,1,0,0,0,0,0,0,0,1,1,0],
    #     [1,0,0,1,0,0,0,0,0,1,0,0,1],
    #     [1,0,0,1,0,0,0,0,0,1,0,0,1],
    #     [0,1,1,0,0,0,0,0,0,0,1,1,0]
    # ]),

    # REPLACED Simkin Glider Gun with Spider
    "Spider": np.array([
        [0,0,1,1,0,0,0,0,0,0,1,1,0],
        [0,1,0,1,0,0,1,0,1,0,0,0,0],
        [0,0,1,1,0,1,1,0,0,0,0,0,0],
        [0,0,0,1,1,0,1,1,0,0,0,0,0],
        [0,0,0,1,0,0,0,1,0,0,0,0,0],
        [0,0,1,1,0,0,0,1,1,0,0,0,0],
        [1,0,0,1,0,0,1,0,0,1,0,0,0],
        [1,0,0,1,0,0,1,0,0,1,0,0,0],
        [1,1,0,0,1,1,0,0,1,1,0,0,0],
        [0,0,0,0,0,1,0,0,0,0,0,0,0]
    ]),

    # ADDED Figure Eight
    "Figure Eight": np.array([
        [1,1,0,0,1,1],
        [1,0,0,1,0,1],
        [0,1,0,1,0,1],
        [1,0,1,0,1,0],
        [1,0,1,0,0,1],
        [1,1,0,0,1,1]
    ]),

    "Bunnies": np.array([
        # Re-inserting confirmed definition for Bunnies Methuselah
        [1,1,0,0,0,0,0,0,0],
        [1,0,0,0,0,0,0,0,0],
        [0,0,1,0,0,0,0,0,1],
        [0,0,1,1,0,0,0,1,1],
        [0,0,0,1,0,0,0,1,0],
        [0,0,0,0,0,0,0,1,0],
        [0,0,0,0,0,1,1,0,0]
    ]),

     "Thunderbird": np.array([
        # Corrected definition for the Thunderbird Methuselah
        [0,0,1,0,0],
        [1,0,1,0,0],
        [1,1,1,0,0],
        [0,0,1,0,1],
        [0,0,1,1,1]
    ]),

}

def get_pattern(name):
    """Returns the NumPy array for a given pattern name."""
    return patterns.get(name)

def get_pattern_names():
    """Returns a list of available pattern names."""
    return list(patterns.keys())

# Example: Get the Glider pattern
# glider_array = get_pattern("Glider")
# print(glider_array)